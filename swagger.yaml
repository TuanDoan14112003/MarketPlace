swagger: '2.0'
info:
  title: Ankon API
  description: Ankon API
  termsOfService: https://www.google.com/policies/terms/
  version: v1.0.0
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /auth/activate/{uid}/{token}/:
  
    get:
      operationId: auth_activate_read
      description: 'Activate user account'
      summary: 'Activate user account'
      parameters: []
      responses:
        '204':
          description: Your account has been activated
        '400':
          description: Invalid activation link
        '403':
          description: This activation link has already been used
      tags:
        - Authentication
    parameters:
      - name: token
        in: path
        required: true
        type: string
      - name: uid
        in: path
        required: true
        type: string
  /auth/jwt/create/:
    post:
      summary: 'Login'
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              access:
                title: access
                type: string
              refresh:
                title: refresh
                type: string
              
            
      tags:
        - Authentication
    parameters: []
  /auth/jwt/refresh/:
    post:
      summary: 'Get new JWT token'
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - Authentication
    parameters: []
  /auth/jwt/verify/:
    post:
      summary: 'Verify JWT access token'
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
        - Authentication
    parameters: []
  /auth/users/:
    get:
      summary: 'Get all users (admin permission only)'
      operationId: auth_users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - Authentication
    post:
      summary: 'Create new user/Register'
      operationId: auth_users_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
        - Authentication
    parameters: []
  /auth/users/activation/:
    post:
      summary: '(internal use only)'
      operationId: auth_users_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Activation'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Activation'
      tags:
        - Authentication
    parameters: []
  /auth/users/me/:
    get:
      operationId: auth_users_me_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - Authentication
    put:
      operationId: auth_users_me_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Authentication
    patch:
      operationId: auth_users_me_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Authentication
    delete:
      operationId: auth_users_me_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Authentication
    parameters: []
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - Authentication
    parameters: []
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - Authentication
    parameters: []
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - Authentication
    parameters: []
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - Authentication
    parameters: []
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      tags:
        - Authentication
    parameters: []
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetPassword'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetPassword'
      tags:
        - Authentication
    parameters: []
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetUsername'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetUsername'
      tags:
        - Authentication
    parameters: []
  /auth/users/{id}/:
    get:
      operationId: auth_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Authentication
    put:
      operationId: auth_users_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Authentication
    patch:
      operationId: auth_users_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Authentication
    delete:
      operationId: auth_users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Authentication
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /social/posts/:
    get:
      operationId: social_posts_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
        - Social
    post:
      operationId: social_posts_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Social
    parameters: []
  /social/posts/{id}/:
    get:
      operationId: social_posts_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Social
    put:
      operationId: social_posts_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Social
    patch:
      operationId: social_posts_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
        - Social
    delete:
      operationId: social_posts_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Social
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this post.
        required: true
        type: integer
definitions:
  TokenObtainPair:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
  TokenVerify:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  User:
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        readOnly: true
        minLength: 1
  UserCreate:
    required:
      - username
      - password
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
      password:
        title: Password
        type: string
        minLength: 1
  Activation:
    required:
      - uid
      - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  SendEmailReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - uid
      - token
      - new_password
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
  UsernameResetConfirm:
    required:
      - new_username
    type: object
    properties:
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  SetPassword:
    required:
      - new_password
      - current_password
    type: object
    properties:
      new_password:
        title: New password
        type: string
        minLength: 1
      current_password:
        title: Current password
        type: string
        minLength: 1
  SetUsername:
    required:
      - current_password
      - new_username
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        minLength: 1
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  CustomUser:
    required:
      - username
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  Post:
    required:
      - title
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      author:
        $ref: '#/definitions/CustomUser'
      score:
        title: Score
        type: integer
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 1000
        minLength: 1
      body:
        title: Body
        type: string
        maxLength: 10000
        x-nullable: true